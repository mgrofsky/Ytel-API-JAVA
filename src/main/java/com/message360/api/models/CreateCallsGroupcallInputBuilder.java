/*
 * YtelAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.message360.api.models;

import java.util.*;

public class CreateCallsGroupcallInputBuilder {
    //the instance to build
    private CreateCallsGroupcallInput createCallsGroupcallInput;

    /**
     * Default constructor to initialize the instance
     */
    public CreateCallsGroupcallInputBuilder() {
        createCallsGroupcallInput = new CreateCallsGroupcallInput();
    }

    /**
     * This number to display on Caller ID as calling
     */
    public CreateCallsGroupcallInputBuilder from(String from) {
        createCallsGroupcallInput.setFrom(from);
        return this;
    }

    /**
     * Please enter multiple E164 number. You can add max 10 numbers. Add numbers separated with comma. e.g : 1111111111,2222222222
     */
    public CreateCallsGroupcallInputBuilder to(String to) {
        createCallsGroupcallInput.setTo(to);
        return this;
    }

    /**
     * URL requested once the call connects
     */
    public CreateCallsGroupcallInputBuilder url(String url) {
        createCallsGroupcallInput.setUrl(url);
        return this;
    }

    /**
     * Define the DTMF that the called party should send to bridge the call. Allowed Values : 0-9, #, *
     */
    public CreateCallsGroupcallInputBuilder groupConfirmKey(String groupConfirmKey) {
        createCallsGroupcallInput.setGroupConfirmKey(groupConfirmKey);
        return this;
    }

    /**
     * Specify the audio file you want to play when the called party picks up the call
     */
    public CreateCallsGroupcallInputBuilder groupConfirmFile(GroupConfirmFileEnum groupConfirmFile) {
        createCallsGroupcallInput.setGroupConfirmFile(groupConfirmFile);
        return this;
    }

    /**
     * Specifies the HTTP method used to request the required URL once call connects.
     */
    public CreateCallsGroupcallInputBuilder method(String method) {
        createCallsGroupcallInput.setMethod(method);
        return this;
    }

    /**
     * URL that can be requested to receive notification when call has ended. A set of default parameters will be sent here once the call is finished.
     */
    public CreateCallsGroupcallInputBuilder statusCallBackUrl(String statusCallBackUrl) {
        createCallsGroupcallInput.setStatusCallBackUrl(statusCallBackUrl);
        return this;
    }

    /**
     * Specifies the HTTP methodlinkclass used to request StatusCallbackUrl.
     */
    public CreateCallsGroupcallInputBuilder statusCallBackMethod(String statusCallBackMethod) {
        createCallsGroupcallInput.setStatusCallBackMethod(statusCallBackMethod);
        return this;
    }

    /**
     * URL requested if the initial Url parameter fails or encounters an error
     */
    public CreateCallsGroupcallInputBuilder fallBackUrl(String fallBackUrl) {
        createCallsGroupcallInput.setFallBackUrl(fallBackUrl);
        return this;
    }

    /**
     * Specifies the HTTP method used to request the required FallbackUrl once call connects.
     */
    public CreateCallsGroupcallInputBuilder fallBackMethod(String fallBackMethod) {
        createCallsGroupcallInput.setFallBackMethod(fallBackMethod);
        return this;
    }

    /**
     * URL that can be requested every 60 seconds during the call to notify of elapsed time and pass other general information.
     */
    public CreateCallsGroupcallInputBuilder heartBeatUrl(String heartBeatUrl) {
        createCallsGroupcallInput.setHeartBeatUrl(heartBeatUrl);
        return this;
    }

    /**
     * Specifies the HTTP method used to request HeartbeatUrl.
     */
    public CreateCallsGroupcallInputBuilder heartBeatMethod(String heartBeatMethod) {
        createCallsGroupcallInput.setHeartBeatMethod(heartBeatMethod);
        return this;
    }

    /**
     * Time (in seconds) we should wait while the call is ringing before canceling the call
     */
    public CreateCallsGroupcallInputBuilder timeout(Integer timeout) {
        createCallsGroupcallInput.setTimeout(timeout);
        return this;
    }

    /**
     * DTMF Digits to play to the call once it connects. 0-9, #, or *
     */
    public CreateCallsGroupcallInputBuilder playDtmf(String playDtmf) {
        createCallsGroupcallInput.setPlayDtmf(playDtmf);
        return this;
    }

    /**
     * Specifies if the caller id will be hidden
     */
    public CreateCallsGroupcallInputBuilder hideCallerId(String hideCallerId) {
        createCallsGroupcallInput.setHideCallerId(hideCallerId);
        return this;
    }

    /**
     * Specifies if the call should be recorded
     */
    public CreateCallsGroupcallInputBuilder record(Boolean record) {
        createCallsGroupcallInput.setRecord(record);
        return this;
    }

    /**
     * Recording parameters will be sent here upon completion
     */
    public CreateCallsGroupcallInputBuilder recordCallBackUrl(String recordCallBackUrl) {
        createCallsGroupcallInput.setRecordCallBackUrl(recordCallBackUrl);
        return this;
    }

    /**
     * Method used to request the RecordCallback URL.
     */
    public CreateCallsGroupcallInputBuilder recordCallBackMethod(String recordCallBackMethod) {
        createCallsGroupcallInput.setRecordCallBackMethod(recordCallBackMethod);
        return this;
    }

    /**
     * Specifies if the call recording should be transcribed
     */
    public CreateCallsGroupcallInputBuilder transcribe(Boolean transcribe) {
        createCallsGroupcallInput.setTranscribe(transcribe);
        return this;
    }

    /**
     * Transcription parameters will be sent here upon completion
     */
    public CreateCallsGroupcallInputBuilder transcribeCallBackUrl(String transcribeCallBackUrl) {
        createCallsGroupcallInput.setTranscribeCallBackUrl(transcribeCallBackUrl);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public CreateCallsGroupcallInput build() {
        return createCallsGroupcallInput;
    }
}