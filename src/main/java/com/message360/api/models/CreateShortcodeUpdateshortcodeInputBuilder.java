/*
 * YtelAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.message360.api.models;

import java.util.*;

public class CreateShortcodeUpdateshortcodeInputBuilder {
    //the instance to build
    private CreateShortcodeUpdateshortcodeInput createShortcodeUpdateshortcodeInput;

    /**
     * Default constructor to initialize the instance
     */
    public CreateShortcodeUpdateshortcodeInputBuilder() {
        createShortcodeUpdateshortcodeInput = new CreateShortcodeUpdateshortcodeInput();
    }

    /**
     * List of valid shortcode to your Ytel account
     */
    public CreateShortcodeUpdateshortcodeInputBuilder shortcode(String shortcode) {
        createShortcodeUpdateshortcodeInput.setShortcode(shortcode);
        return this;
    }

    /**
     * User generated name of the shortcode
     */
    public CreateShortcodeUpdateshortcodeInputBuilder friendlyName(String friendlyName) {
        createShortcodeUpdateshortcodeInput.setFriendlyName(friendlyName);
        return this;
    }

    /**
     * URL that can be requested to receive notification when call has ended. A set of default parameters will be sent here once the call is finished.
     */
    public CreateShortcodeUpdateshortcodeInputBuilder callbackUrl(String callbackUrl) {
        createShortcodeUpdateshortcodeInput.setCallbackUrl(callbackUrl);
        return this;
    }

    /**
     * Specifies the HTTP method used to request the required StatusCallBackUrl once call connects.
     */
    public CreateShortcodeUpdateshortcodeInputBuilder callbackMethod(String callbackMethod) {
        createShortcodeUpdateshortcodeInput.setCallbackMethod(callbackMethod);
        return this;
    }

    /**
     * URL used if any errors occur during execution of InboundXML or at initial request of the required Url provided with the POST.
     */
    public CreateShortcodeUpdateshortcodeInputBuilder fallbackUrl(String fallbackUrl) {
        createShortcodeUpdateshortcodeInput.setFallbackUrl(fallbackUrl);
        return this;
    }

    /**
     * Specifies the HTTP method used to request the required FallbackUrl once call connects.
     */
    public CreateShortcodeUpdateshortcodeInputBuilder fallbackUrlMethod(String fallbackUrlMethod) {
        createShortcodeUpdateshortcodeInput.setFallbackUrlMethod(fallbackUrlMethod);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public CreateShortcodeUpdateshortcodeInput build() {
        return createShortcodeUpdateshortcodeInput;
    }
}